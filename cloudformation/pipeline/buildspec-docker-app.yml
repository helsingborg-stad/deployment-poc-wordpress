version: 0.2

phases:
  install:
    runtime-versions:
      docker: 19
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - docker pull $ECR_REPOSITORY_URI:base || true
      - docker pull $ECR_REPOSITORY_URI:latest || true
      - docker build -t $ECR_REPOSITORY_URI:base -t base --cache-from $ECR_REPOSITORY_URI:base $BUILD_CONTEXT -f ${BUILD_CONTEXT}Dockerfile.base
      - docker build --build-arg NPM_TOKEN=$NPM_TOKEN --build-arg ACF=$ACF --build-arg CLEANUP=$CLEANUP -t $ECR_REPOSITORY_URI:latest -t $ECR_REPOSITORY_URI:$IMAGE_TAG --cache-from $ECR_REPOSITORY_URI:base --cache-from $ECR_REPOSITORY_URI:latest --target app $BUILD_CONTEXT
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $ECR_REPOSITORY_URI:base
      - docker push $ECR_REPOSITORY_URI:latest
      - docker push $ECR_REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '{"imageUri":"%s"}' $ECR_REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
artifacts:
    files: imagedefinitions.json

    